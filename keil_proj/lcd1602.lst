C51 COMPILER V9.52.0.0   LCD1602                                                           01/12/2018 00:37:36 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN lcd1602.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\lcd1602.c ROM(COMPACT) BROWSE INCDIR(.\source) DEBUG OBJECTEXTEND PR
                    -INT(.\lcd1602.lst) TABS(2) OBJECT(lcd1602.obj)

line level    source

   1          #include "lcd1602.h"
   2          
   3          //**************************************************
   4          //* Internal Func: busy detect
   5          //**************************************************
   6          static void LcdWait (void)
   7          {
   8   1          bit ebk;
   9   1          ebk = EA;
  10   1          EA = 0;
  11   1      
  12   1          // start read
  13   1          PIN_1602_RS     = 0;
  14   1          PIN_1602_RW     = 1;
  15   1          PIN_1602_EN     = 1;
  16   1          DelayUs (0);
  17   1      
  18   1          while (1)
  19   1          {
  20   2      #ifdef SIMULATE_ONLY
                      PIN_1602_DATA   = 0x7F;
              #else
  23   2              PIN_1602_DATA   = 0xFF;
  24   2      #endif
  25   2              PIN_1602_EN     = 0;
  26   2              DelayUs (0);
  27   2              PIN_1602_EN     = 1;
  28   2              DelayUs (0);
  29   2              // busy_flag = (bit)(PIN_1602_DATA & 0x80) ;
  30   2              if (!(PIN_1602_DATA & 0x80))
  31   2              {
  32   3                  break;
  33   3              }
  34   2          DelayUs (10); 
  35   2          }  
  36   1      
  37   1          PIN_1602_EN     = 0;
  38   1          EA = ebk;
  39   1      
  40   1      }
  41          
  42          //**************************************************
  43          //* Internal Func: write command
  44          //**************************************************
  45          void LcdWriteCmd (unsigned char cmd)
  46          {
  47   1          bit ebk;
  48   1      
  49   1          // check
  50   1          LcdWait();
  51   1      
  52   1          ebk = EA;
  53   1          EA = 0;
  54   1      
C51 COMPILER V9.52.0.0   LCD1602                                                           01/12/2018 00:37:36 PAGE 2   

  55   1          // write cmd
  56   1          PIN_1602_RS     = 0;
  57   1          PIN_1602_RW     = 0;
  58   1          PIN_1602_EN     = 0;
  59   1          PIN_1602_DATA   = cmd;
  60   1      
  61   1          // pulse
  62   1          PIN_1602_EN     = 1;
  63   1          DelayUs (0);
  64   1          PIN_1602_EN     = 0;
  65   1      
  66   1          EA = ebk;
  67   1      
  68   1          DelayUs (10);
  69   1      }
  70          
  71          //**************************************************
  72          //* Internal Func: write data
  73          //**************************************************
  74          void LcdWriteData (unsigned char dt)
  75          {
  76   1          bit ebk;
  77   1      
  78   1          // check
  79   1          LcdWait();
  80   1      
  81   1          ebk = EA;
  82   1          EA = 0;
  83   1      
  84   1          // write cmd
  85   1          PIN_1602_RS     = 1;
  86   1          PIN_1602_RW     = 0;
  87   1          PIN_1602_EN     = 0;
  88   1          PIN_1602_DATA   = dt;
  89   1          DelayUs (0);
  90   1      
  91   1          // pulse
  92   1          PIN_1602_EN     = 1;
  93   1          DelayUs (0);
  94   1          PIN_1602_EN     = 0;
  95   1      
  96   1          EA = ebk;
  97   1      
  98   1          DelayUs (10);
  99   1      }
 100          
 101          //**************************************************
 102          //* Internal Func: read status
 103          //**************************************************
 104          unsigned char LcdReadStatus (void)
 105          {
 106   1          unsigned char ret;
 107   1          bit ebk;
 108   1          LcdWait ();
 109   1      
 110   1          ebk = EA;
 111   1          EA = 0;
 112   1      
 113   1          // start read
 114   1          PIN_1602_RS     = 0;
 115   1          PIN_1602_RW     = 1;
 116   1          PIN_1602_EN     = 1;
C51 COMPILER V9.52.0.0   LCD1602                                                           01/12/2018 00:37:36 PAGE 3   

 117   1          PIN_1602_DATA   = 0xFF;
 118   1          DelayUs (0);
 119   1          ret = PIN_1602_DATA;
 120   1      
 121   1          PIN_1602_EN     = 0;
 122   1          PIN_1602_RW     = 0;
 123   1      
 124   1          EA = ebk;
 125   1      
 126   1        return ret;
 127   1      }
 128          
 129          //**************************************************
 130          //* Internal Func: read data
 131          //**************************************************
 132          unsigned char LcdReadData (void)
 133          {
 134   1          unsigned char ret;
 135   1          bit ebk;
 136   1          LcdWait ();
 137   1      
 138   1          ebk = EA;
 139   1          EA = 0;
 140   1      
 141   1          // start read
 142   1          PIN_1602_RS     = 1;
 143   1          PIN_1602_RW     = 1;
 144   1          PIN_1602_EN     = 1;
 145   1          PIN_1602_DATA   = 0xFF;
 146   1          _nop_();    _nop_(); 
 147   1          ret = PIN_1602_DATA;
 148   1      
 149   1          PIN_1602_EN     = 0;
 150   1          PIN_1602_RW     = 0;
 151   1      
 152   1          EA = ebk;
 153   1      
 154   1        return ret;
 155   1      }
 156          
 157          //**************************************************
 158          //* Internal Func: AC inc&dec
 159          //**************************************************
 160          void LcdAcInc (void)
 161          {
 162   1          LcdWriteCmd (LCD1602_CMD_MM_14);
 163   1          DelayUs (50);
 164   1      }
 165          
 166          void LcdAcDec (void)
 167          {
 168   1          LcdWriteCmd (LCD1602_CMD_MM_10);
 169   1          DelayUs (50);
 170   1      }
 171          
 172          //**************************************************
 173          //* Func: AC inc&dec
 174          //**************************************************
 175          void LcdWriteOneCGRAM (unsigned char addr, char *pval)
 176          {
 177   1          unsigned char i;
 178   1          LcdWriteCmd (0x40 + (addr << 3));
C51 COMPILER V9.52.0.0   LCD1602                                                           01/12/2018 00:37:36 PAGE 4   

 179   1          for (i = 0; i < 8; i++)
 180   1              LcdWriteData (pval[i]);
 181   1      }
 182          
 183          //**************************************************
 184          //* Func: set position
 185          //**************************************************
 186          void LcdSetPos (unsigned char x, unsigned char y)
 187          {
 188   1          // 1. format parameter
 189   1          x = x & 0x3F;
 190   1          y = y & 0x01;
 191   1      
 192   1          // 2. cal ddram addr
 193   1          if (y) x |= 0x40;
 194   1      
 195   1          // 3. write cmd
 196   1          LcdWriteCmd (x|0x80);
 197   1          DelayUs (50);
 198   1      }
 199          
 200          //**************************************************
 201          //* Func: display char
 202          //**************************************************
 203          void LcdDispChar (unsigned char x, unsigned char y, char c)
 204          {
 205   1          LcdSetPos (x, y);
 206   1          LcdWriteData (c);
 207   1      }
 208          
 209          //**************************************************
 210          //* Func: display string
 211          //**************************************************
 212          void LcdDispString (unsigned char x, unsigned char y, char *ps)
 213          {
 214   1          LcdSetPos (x, y);
 215   1          while (*ps != '\0')
 216   1        {
 217   2              LcdWriteData (*ps);
 218   2          ps++;
 219   2          }
 220   1      }
 221          
 222          //**************************************************
 223          //* Func: display BCD
 224          //**************************************************
 225          void LcdDispBCD (unsigned char x, unsigned char y, unsigned char bcd, unsigned char mode)
 226          {
 227   1          // higher byte
 228   1          LcdSetPos (x, y);
 229   1          if ((bcd & 0xF0) == 0x00)
 230   1          {
 231   2              if ((mode & 0xF0) == 0)
 232   2                  LcdWriteData ('0');
 233   2              else
 234   2                  LcdWriteData (' ');
 235   2          }
 236   1          else
 237   1          {
 238   2              LcdWriteData (((bcd >> 4) & 0x0F) + '0');
 239   2          }
 240   1      
C51 COMPILER V9.52.0.0   LCD1602                                                           01/12/2018 00:37:36 PAGE 5   

 241   1          // lower byte
 242   1          LcdSetPos ((x + 1), y);
 243   1          if ((bcd & 0x0F) == 0x00)
 244   1          {
 245   2              if ((mode & 0x0F) == 0)
 246   2                  LcdWriteData ('0');
 247   2              else
 248   2                  LcdWriteData (' ');
 249   2          }
 250   1          else
 251   1          {
 252   2              LcdWriteData (((bcd) & 0x0F) + '0');
 253   2          }
 254   1      }
 255          
 256          //**************************************************
 257          //* Func: display int
 258          //**************************************************
 259          void LcdDispInt (unsigned char x, unsigned char y, unsigned int dat)
 260          {
 261   1          unsigned int i, j;
 262   1          i = dat/10000 + '0';
 263   1          j = dat%10000;
 264   1          LcdDispChar (x+0, y, i);
 265   1          i = j/1000 + '0';
 266   1          j = j%1000;
 267   1          LcdDispChar (x+1, y, i);
 268   1          i = j/100 + '0';
 269   1          j = j%100;
 270   1          LcdDispChar (x+2, y, i);
 271   1          i = j/10 + '0';
 272   1          j = j%10 + '0';
 273   1          LcdDispChar (x+3, y, i);
 274   1          LcdDispChar (x+4, y, j);
 275   1      }
 276          
 277          //******************************************************
 278          //* LCD Init
 279          //******************************************************
 280          void LcdInit (void)
 281          {
 282   1          // 1. Bus Mode 38: 8b, 2 lines
 283   1          DelayMs (50);
 284   1          LcdWriteCmd (LCD1602_CMD_BM_38);        // 39us
 285   1          DelayUs (100);
 286   1      
 287   1          // 5. Display Mode 0C: open screen, no cursor, no splash
 288   1          LcdWriteCmd (LCD1602_CMD_DM_0C);
 289   1          DelayUs (100);
 290   1      
 291   1          // 2. Display Mode 08: close screen
 292   1          //LcdWriteCmd (LCD1602_CMD_DM_08);      // 39us
 293   1          //DelayUs (100);
 294   1      
 295   1          // 3. Clear Screen 01
 296   1          LcdWriteCmd (LCD1602_CMD_CLS);          // 1.53ms
 297   1          DelayMs (10);
 298   1      
 299   1          // 4. Enter Mode 06: addr+1, no scroll
 300   1          LcdWriteCmd (LCD1602_CMD_EM_06);        // 39us
 301   1          DelayUs (100);
 302   1      
C51 COMPILER V9.52.0.0   LCD1602                                                           01/12/2018 00:37:36 PAGE 6   

 303   1          // 5. Display Mode 0C: open screen, no cursor, no splash
 304   1          //LcdWriteCmd (LCD1602_CMD_DM_0C);
 305   1          //DelayUs (250);
 306   1      }
 307          
 308          //**************************************************
 309          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    661    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       5
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
