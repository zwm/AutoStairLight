C51 COMPILER V9.52.0.0   PROJ_LIB                                                          01/11/2018 22:19:59 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE PROJ_LIB
OBJECT MODULE PLACED IN proj_lib.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\proj_lib.c ROM(COMPACT) BROWSE INCDIR(.\source) DEBUG OBJECTEXTEND P
                    -RINT(.\proj_lib.lst) TABS(2) OBJECT(proj_lib.obj)

line level    source

   1          #include "proj_lib.h"
   2          
   3          //---------------------------------------------------------------------------
   4          // Global Variable Define
   5          //---------------------------------------------------------------------------
   6          volatile u16  time_tick;
   7          volatile u16  time_sec;
   8          volatile u8   fsm;
   9          volatile u8   us0_gap;
  10          volatile u8   us1_gap;
  11          volatile u16  us0_err;
  12          volatile u16  us1_err;
  13          volatile bit  stair_idle;
  14          volatile bit  us0_frash;
  15          volatile bit  us1_frash;
  16          volatile u16  us0_meas[4];
  17          volatile u16  us1_meas[4];
  18          volatile STRUCT_INT_CNT data st_x0;
  19          volatile STRUCT_INT_CNT data st_x1;
  20          volatile STRUCT_INT_CNT data st_t0;
  21          volatile STRUCT_INT_CNT data st_t1;
  22          volatile STRUCT_INT_CNT data *st_p;
  23          
  24          //---------------------------------------------------------------------------
  25          // Check struct increased by interrupt
  26          //---------------------------------------------------------------------------
  27          u8 inc_check (STRUCT_INT_CNT *p)
  28          {
  29   1          u8 cur;
  30   1          cur = p->cnt;
  31   1          if (cur > p->bak)       // normal increase
  32   1          {
  33   2              cur = cur - p->bak;
  34   2              p->bak = p->cnt;
  35   2          }
  36   1          else if (cur < p->bak)  // overflow increase
  37   1          {
  38   2              cur = 256 - p->bak + cur;
  39   2              p->bak = p->cnt;
  40   2          }
  41   1          else                    // no increase
  42   1          {
  43   2              cur = 0;
  44   2          }
  45   1          return cur;
  46   1      }
  47          
  48          //---------------------------------------------------------------------------
  49          // Initial System
  50          //---------------------------------------------------------------------------
  51          void sys_init (void)
  52          {
  53   1          // device init
  54   1          mcu_init ();
C51 COMPILER V9.52.0.0   PROJ_LIB                                                          01/11/2018 22:19:59 PAGE 2   

  55   1          LcdInit ();
  56   1          // parameter init
  57   1          st_x0.cnt = 0;
  58   1          st_x0.bak = 0;
  59   1          st_x1.cnt = 0;
  60   1          st_x1.bak = 0;
  61   1          st_t0.cnt = 0;
  62   1          st_t0.bak = 0;
  63   1          st_t1.cnt = 0;
  64   1          st_t1.bak = 0;
  65   1          us0_frash = 0;
  66   1          us1_frash = 0;
  67   1          us0_meas[0] = 0;
  68   1          us0_meas[1] = 0;
  69   1          us0_meas[2] = 0;
  70   1          us0_meas[3] = 0;
  71   1          us1_meas[0] = 0;
  72   1          us1_meas[1] = 0;
  73   1          us1_meas[2] = 0;
  74   1          us1_meas[3] = 0;
  75   1          time_tick = 0;
  76   1          time_sec = 0;
  77   1          fsm = FSM_US01;
  78   1          us0_gap = 0;
  79   1          us1_gap = 0;
  80   1          us0_err = 0;
  81   1          us1_err = 0;
  82   1          stair_idle = 0;
  83   1          us0_trig = 0;
  84   1          us1_trig = 0;
  85   1          EA = 0;
  86   1      }
  87          
  88          //---------------------------------------------------------------------------
  89          // Trigger one measurement of untrasonic 0
  90          //---------------------------------------------------------------------------
  91          void trig_us0 (void)
  92          {
  93   1          DelayUs(20);
  94   1          us0_trig = 1;
  95   1          DelayUs(20);        // more than 10us
  96   1          us0_trig = 0;
  97   1      }
  98          
  99          //---------------------------------------------------------------------------
 100          // Trigger one measurement of untrasonic 1
 101          //---------------------------------------------------------------------------
 102          void trig_us1 (void)
 103          {
 104   1          DelayUs(20);
 105   1          us1_trig = 1;
 106   1          DelayUs(20);        // more than 10us
 107   1          us1_trig = 0;
 108   1      }
 109          
 110          //---------------------------------------------------------------------------
 111          // FSM state: FSM_US01 handler
 112          //---------------------------------------------------------------------------
 113          void fsm_us01_proc(void)
 114          {
 115   1          u8 i;
 116   1          bit ea_bak;
C51 COMPILER V9.52.0.0   PROJ_LIB                                                          01/11/2018 22:19:59 PAGE 3   

 117   1          ea_bak = EA;
 118   1      #ifdef CHECK_MODE_INT
                  mcu_set_exint (INT_IDX_0, INT_MOD_STOP );
                  mcu_set_exint (INT_IDX_1, INT_MOD_STOP );
                  EA = 1;
              #else
 123   1          EA = 0;
 124   1      #endif
 125   1          if (us0_gap != 0)
 126   1          {
 127   2              us0_gap = us0_gap - 1;
 128   2          }
 129   1          if (us0_gap == 0)
 130   1          {
 131   2              mcu_set_exint (INT_IDX_0, INT_MOD_START);
 132   2              mcu_set_tmr (TMR_IDX_0, TMR_MOD_CAP  );
 133   2              trig_us0();
 134   2          }
 135   1          if (us1_gap != 0)
 136   1          {
 137   2              us1_gap = us1_gap - 1;
 138   2          }
 139   1          if (us1_gap == 0)
 140   1          {
 141   2              mcu_set_exint (INT_IDX_1, INT_MOD_START);
 142   2              mcu_set_tmr (TMR_IDX_1, TMR_MOD_CAP  );
 143   2              trig_us1();
 144   2          }
 145   1          // wait finish
 146   1          DelayMs(50);
 147   1          mcu_set_tmr (TMR_IDX_0, TMR_MOD_STOP );
 148   1          mcu_set_tmr (TMR_IDX_1, TMR_MOD_STOP );
 149   1      #ifdef CHECK_MODE_INT
                  // store value
                  if (us0_gap == 0)   // ultra-sonic 0
                  {
                      i = inc_check (&st_x0);
                      if (i == 1)
                      {
                          us0_meas[3] = us0_meas[2];
                          us0_meas[2] = us0_meas[1];
                          us0_meas[1] = us0_meas[0];
                          us0_meas[0] = ((TH0<<8) + TL0);
                          us0_frash   = 1;
                      }
                      else
                      {
                          us0_err = us0_err + i + 10;
                          us0_gap = MEAS_ERR_GAP;
                      }
                  }
                  if (us1_gap == 0)   // ultra-sonic 1
                  {
                      i = inc_check (&st_x1);
                      if (i == 1)
                      {
                          us1_meas[3] = us1_meas[2];
                          us1_meas[2] = us1_meas[1];
                          us1_meas[1] = us1_meas[0];
                          us1_meas[0] = ((TH1<<8) + TL1);
                          us1_frash   = 1;
                      }
C51 COMPILER V9.52.0.0   PROJ_LIB                                                          01/11/2018 22:19:59 PAGE 4   

                      else
                      {
                          us1_err = us1_err + i + 10;
                          us1_gap = MEAS_ERR_GAP;
                      }
                  }
              #else       // POLL MODE
 186   1          // store value
 187   1          if (us0_gap == 0)   // ultra-sonic 0
 188   1          {
 189   2              if (IE0)
 190   2              {
 191   3                  IE0 = 0;
 192   3                  us0_meas[3] = us0_meas[2];
 193   3                  us0_meas[2] = us0_meas[1];
 194   3                  us0_meas[1] = us0_meas[0];
 195   3                  us0_meas[0] = ((TH0<<8) + TL0);
 196   3                  us0_frash   = 1;
 197   3              }
 198   2              else
 199   2              {
 200   3                  us0_err = us0_err + 1;
 201   3                  us0_gap = MEAS_ERR_GAP;
 202   3              }
 203   2          }
 204   1          if (us1_gap == 0)   // ultra-sonic 1
 205   1          {
 206   2              if (IE1)
 207   2              {
 208   3                  IE1 = 0;
 209   3                  us1_meas[3] = us1_meas[2];
 210   3                  us1_meas[2] = us1_meas[1];
 211   3                  us1_meas[1] = us1_meas[0];
 212   3                  us1_meas[0] = ((TH1<<8) + TL1);
 213   3                  us1_frash   = 1;
 214   3              }
 215   2              else
 216   2              {
 217   3                  us1_err = us1_err + 1;
 218   3                  us1_gap = MEAS_ERR_GAP;
 219   3              }
 220   2          }
 221   1      #endif
 222   1          mcu_set_exint (INT_IDX_0, INT_MOD_STOP );
 223   1          mcu_set_exint (INT_IDX_1, INT_MOD_STOP );
 224   1          EA = ea_bak;
 225   1          // jump to next state
 226   1          fsm = FSM_TICK;
 227   1      }
*** WARNING C280 IN LINE 115 OF source\proj_lib.c: 'i': unreferenced local variable
 228          
 229          //---------------------------------------------------------------------------
 230          // FSM: FSM_TICK state handler, process each 1/4 second
 231          // JOY_SYS TEST DISPLAY:
 232          // char_index  |012345678901234567890123|
 233          // label       |len       err_num  time |
 234          // line0       |xxxxx     xxxxx         |
 235          // line1       |xxxxx     xxxxx    xxxxx|
 236          //---------------------------------------------------------------------------
 237          void fsm_tick_proc (void)
 238          {
 239   1          u16 i, j;
C51 COMPILER V9.52.0.0   PROJ_LIB                                                          01/11/2018 22:19:59 PAGE 5   

 240   1          bit ea_bak;
 241   1          ea_bak = EA;
 242   1          i = 0;
 243   1          j = 0;
 244   1          // 250ms timer
 245   1          EA = 1;
 246   1          mcu_set_tmr (TMR_IDX_0, TMR_MOD_10MS);
 247   1          while (1)
 248   1          {
 249   2              i = inc_check (&st_t0);
 250   2              j = j + i;
 251   2              if (j >= (SYS_TICK_CYC/10))
 252   2              {
 253   3                  mcu_set_tmr (TMR_IDX_0, TMR_MOD_STOP);
 254   3                  break;
 255   3              }
 256   2          }
 257   1          EA = ea_bak;
 258   1          time_tick = time_tick + 2;
 259   1          // display time of second
 260   1          if (time_tick%4 == 0)
 261   1          {
 262   2              time_sec = time_sec + 1;
 263   2              LcdDispInt  (19, 1, time_sec);
 264   2          }
 265   1          // display distance
 266   1          if (us0_frash == 1)
 267   1          {
 268   2              us0_frash = 0;
 269   2              i = us0_meas[0]*0.34;
 270   2              LcdDispInt  (0, 0, i);
 271   2              LcdDispChar (5, 0, 'm');
 272   2              LcdDispChar (6, 0, 'm');
 273   2          }
 274   1          if (us1_frash == 1)
 275   1          {
 276   2              us1_frash = 0;
 277   2              i = us1_meas[0]*0.34;
 278   2              LcdDispInt  (0, 1, i);
 279   2              LcdDispChar (5, 1, 'm');
 280   2              LcdDispChar (6, 1, 'm');
 281   2          }
 282   1          j = 0;
 283   1          if (us0_gap == 0 && us0_frash == 0)
 284   1          {
 285   2              j = j + 1;
 286   2          }
 287   1          if (us1_gap == 0 && us1_frash == 0)
 288   1          {
 289   2              j = j + 1;
 290   2          }
 291   1          if (j != 0)
 292   1          {
 293   2              fsm = FSM_ERRO;
 294   2          }
 295   1          else 
 296   1          {
 297   2              fsm = FSM_US01;
 298   2          }
 299   1      }
 300          
 301          //---------------------------------------------------------------------------
C51 COMPILER V9.52.0.0   PROJ_LIB                                                          01/11/2018 22:19:59 PAGE 6   

 302          // FSM: FSM_ERRO handler
 303          //---------------------------------------------------------------------------
 304          void fsm_erro_proc(void)
 305          {
 306   1          LcdDispInt  (10, 0, us0_err);
 307   1          LcdDispInt  (10, 1, us1_err);
 308   1          fsm = FSM_US01;
 309   1      }
 310          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    691    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     36       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
