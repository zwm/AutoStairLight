C51 COMPILER V9.52.0.0   PROJ_LIB                                                          01/11/2018 18:54:03 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE PROJ_LIB
OBJECT MODULE PLACED IN proj_lib.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE source\proj_lib.c ROM(COMPACT) BROWSE INCDIR(.\source) DEBUG OBJECTEXTEND P
                    -RINT(.\proj_lib.lst) TABS(2) OBJECT(proj_lib.obj)

line level    source

   1          #include "proj_lib.h"
   2          
   3          //---------------------------------------------------------------------------
   4          // Global Variable Define
   5          //---------------------------------------------------------------------------
   6          volatile u16  time_tick;
   7          volatile u16  time_sec;
   8          volatile u8   fsm;
   9          volatile u8   us0_gap;
  10          volatile u8   us1_gap;
  11          volatile u16  us0_err;
  12          volatile u16  us1_err;
  13          volatile bit  stair_idle;
  14          volatile bit  us0_frash;
  15          volatile bit  us1_frash;
  16          volatile u16  us0_meas[4];
  17          volatile u16  us1_meas[4];
  18          volatile STRUCT_INT_CNT data st_x0;
  19          volatile STRUCT_INT_CNT data st_x1;
  20          volatile STRUCT_INT_CNT data st_t0;
  21          volatile STRUCT_INT_CNT data st_t1;
  22          volatile STRUCT_INT_CNT data *st_p;
  23          
  24          //---------------------------------------------------------------------------
  25          // Check struct increased by interrupt
  26          //---------------------------------------------------------------------------
  27          u8 inc_check (STRUCT_INT_CNT *p)
  28          {
  29   1          u8 cur;
  30   1          cur = p->cnt;
  31   1          if (cur > p->bak)       // normal increase
  32   1          {
  33   2              cur = cur - p->bak;
  34   2              p->bak = p->cnt;
  35   2          }
  36   1          else if (cur < p->bak)  // overflow increase
  37   1          {
  38   2              cur = 256 - p->bak + cur;
  39   2              p->bak = p->cnt;
  40   2          }
  41   1          else                    // no increase
  42   1          {
  43   2              cur = 0;
  44   2          }
  45   1          return cur;
  46   1      }
  47          
  48          //---------------------------------------------------------------------------
  49          // Initial System
  50          //---------------------------------------------------------------------------
  51          void sys_init (void)
  52          {
  53   1          // device init
  54   1          mcu_init ();
C51 COMPILER V9.52.0.0   PROJ_LIB                                                          01/11/2018 18:54:03 PAGE 2   

  55   1          LcdInit ();
  56   1          // parameter init
  57   1          st_x0.cnt = 0;
  58   1          st_x0.bak = 0;
  59   1          st_x1.cnt = 0;
  60   1          st_x1.bak = 0;
  61   1          st_t0.cnt = 0;
  62   1          st_t0.bak = 0;
  63   1          st_t1.cnt = 0;
  64   1          st_t1.bak = 0;
  65   1          us0_frash = 0;
  66   1          us1_frash = 0;
  67   1          us0_meas[0] = 0;
  68   1          us0_meas[1] = 0;
  69   1          us0_meas[2] = 0;
  70   1          us0_meas[3] = 0;
  71   1          us1_meas[0] = 0;
  72   1          us1_meas[1] = 0;
  73   1          us1_meas[2] = 0;
  74   1          us1_meas[3] = 0;
  75   1          time_tick = 0;
  76   1          time_sec = 0;
  77   1          fsm = FSM_US01;
  78   1          us0_gap = 0;
  79   1          us1_gap = 0;
  80   1          us0_err = 0;
  81   1          us1_err = 0;
  82   1          stair_idle = 0;
  83   1          us0_trig = 0;
  84   1          us1_trig = 0;
  85   1          EA = 0;
  86   1      }
  87          
  88          //---------------------------------------------------------------------------
  89          // Trigger one measurement of untrasonic 0
  90          //---------------------------------------------------------------------------
  91          void trig_us0 (void)
  92          {
  93   1          DelayUs(20);
  94   1          us0_trig = 1;
  95   1          DelayUs(20);        // more than 10us
  96   1          us0_trig = 0;
  97   1      }
  98          
  99          //---------------------------------------------------------------------------
 100          // Trigger one measurement of untrasonic 1
 101          //---------------------------------------------------------------------------
 102          void trig_us1 (void)
 103          {
 104   1          DelayUs(20);
 105   1          us1_trig = 1;
 106   1          DelayUs(20);        // more than 10us
 107   1          us1_trig = 0;
 108   1      }
 109          
 110          //---------------------------------------------------------------------------
 111          // FSM state: FSM_US01 handler
 112          //---------------------------------------------------------------------------
 113          void fsm_us01_proc(void)
 114          {
 115   1          u8 i;
 116   1          bit ea_bak;
C51 COMPILER V9.52.0.0   PROJ_LIB                                                          01/11/2018 18:54:03 PAGE 3   

 117   1          ea_bak = EA;
 118   1      #ifdef CHECK_MODE_INT
                  EA = 1;
              #else
 121   1          EA = 0;
 122   1      #endif
 123   1          if (us0_gap != 0)
 124   1          {
 125   2              us0_gap = us0_gap - 1;
 126   2          }
 127   1          if (us0_gap == 0)
 128   1          {
 129   2              mcu_set_exint (INT_IDX_0, INT_MOD_START);
 130   2              mcu_set_tmr (TMR_IDX_0, TMR_MOD_CAP  );
 131   2              trig_us0();
 132   2          }
 133   1          if (us1_gap != 0)
 134   1          {
 135   2              us1_gap = us1_gap - 1;
 136   2          }
 137   1          if (us1_gap == 0)
 138   1          {
 139   2              mcu_set_exint (INT_IDX_1, INT_MOD_START);
 140   2              mcu_set_tmr (TMR_IDX_1, TMR_MOD_CAP  );
 141   2              trig_us1();
 142   2          }
 143   1          // wait finish
 144   1          DelayMs(50);
 145   1          mcu_set_tmr (TMR_IDX_0, TMR_MOD_STOP );
 146   1          mcu_set_tmr (TMR_IDX_1, TMR_MOD_STOP );
 147   1      #ifdef CHECK_MODE_INT
                  // store value
                  if (us0_gap == 0)   // ultra-sonic 0
                  {
                      i = inc_check (&st_x0);
                      if (i == 1)
                      {
                          us0_meas[3] = us0_meas[2];
                          us0_meas[2] = us0_meas[1];
                          us0_meas[1] = us0_meas[0];
                          us0_meas[0] = ((TH0<<8) + TL0);
                          us0_frash   = 1;
                      }
                      else
                      {
                          us0_err = us0_err + i + 10;
                          us0_gap = MEAS_ERR_GAP;
                      }
                  }
                  if (us1_gap == 0)   // ultra-sonic 1
                  {
                      i = inc_check (&st_x1);
                      if (i == 1)
                      {
                          us1_meas[3] = us1_meas[2];
                          us1_meas[2] = us1_meas[1];
                          us1_meas[1] = us1_meas[0];
                          us1_meas[0] = ((TH1<<8) + TL1);
                          us1_frash   = 1;
                      }
                      else
                      {
C51 COMPILER V9.52.0.0   PROJ_LIB                                                          01/11/2018 18:54:03 PAGE 4   

                          us1_err = us1_err + i + 10;
                          us1_gap = MEAS_ERR_GAP;
                      }
                  }
              #else       // POLL MODE
 184   1          // store value
 185   1          if (us0_gap == 0)   // ultra-sonic 0
 186   1          {
 187   2              if (IE0)
 188   2              {
 189   3                  IE0 = 0;
 190   3                  us0_meas[3] = us0_meas[2];
 191   3                  us0_meas[2] = us0_meas[1];
 192   3                  us0_meas[1] = us0_meas[0];
 193   3                  us0_meas[0] = ((TH0<<8) + TL0);
 194   3                  us0_frash   = 1;
 195   3              }
 196   2              else
 197   2              {
 198   3                  us0_err = us0_err + 1;
 199   3                  us0_gap = MEAS_ERR_GAP;
 200   3              }
 201   2          }
 202   1          if (us1_gap == 0)   // ultra-sonic 1
 203   1          {
 204   2              if (IE1)
 205   2              {
 206   3                  IE1 = 0;
 207   3                  us1_meas[3] = us1_meas[2];
 208   3                  us1_meas[2] = us1_meas[1];
 209   3                  us1_meas[1] = us1_meas[0];
 210   3                  us1_meas[0] = ((TH1<<8) + TL1);
 211   3                  us1_frash   = 1;
 212   3              }
 213   2              else
 214   2              {
 215   3                  us1_err = us1_err + 1;
 216   3                  us1_gap = MEAS_ERR_GAP;
 217   3              }
 218   2          }
 219   1      #endif
 220   1          mcu_set_exint (INT_IDX_0, INT_MOD_STOP );
 221   1          mcu_set_exint (INT_IDX_1, INT_MOD_STOP );
 222   1          EA = ea_bak;
 223   1          // jump to next state
 224   1          fsm = FSM_TICK;
 225   1      }
*** WARNING C280 IN LINE 115 OF source\proj_lib.c: 'i': unreferenced local variable
 226          
 227          //---------------------------------------------------------------------------
 228          // FSM: FSM_TICK state handler, process each 1/4 second
 229          // JOY_SYS TEST DISPLAY:
 230          // char_index  |012345678901234567890123|
 231          // label       |len       err_num  time |
 232          // line0       |xxxxx     xxxxx         |
 233          // line1       |xxxxx     xxxxx    xxxxx|
 234          //---------------------------------------------------------------------------
 235          void fsm_tick_proc (void)
 236          {
 237   1          u16 i, j;
 238   1          bit ea_bak;
 239   1          ea_bak = EA;
C51 COMPILER V9.52.0.0   PROJ_LIB                                                          01/11/2018 18:54:03 PAGE 5   

 240   1          i = 0;
 241   1          j = 0;
 242   1          // 250ms timer
 243   1          EA = 1;
 244   1          mcu_set_tmr (TMR_IDX_0, TMR_MOD_10MS);
 245   1          while (1)
 246   1          {
 247   2              i = inc_check (&st_t0);
 248   2              j = j + i;
 249   2              if (j >= (SYS_TICK_CYC/10))
 250   2              {
 251   3                  mcu_set_tmr (TMR_IDX_0, TMR_MOD_STOP);
 252   3                  break;
 253   3              }
 254   2          }
 255   1          EA = ea_bak;
 256   1          time_tick = time_tick + 1;
 257   1          // display time of second
 258   1          if (time_tick%4 == 0)
 259   1          {
 260   2              time_sec = time_sec + 1;
 261   2              LcdDispInt  (19, 1, time_sec);
 262   2          }
 263   1          // display distance
 264   1          if (us0_frash == 1)
 265   1          {
 266   2              i = us0_meas[0]*0.34;
 267   2              i = us0_meas[0];
 268   2              LcdDispInt  (0, 0, i);
 269   2              LcdDispChar (5, 0, 'm');
 270   2              LcdDispChar (6, 0, 'm');
 271   2          }
 272   1          if (us1_frash == 1)
 273   1          {
 274   2              i = us1_meas[0]*0.34;
 275   2              i = us1_meas[0];
 276   2              LcdDispInt  (0, 1, i);
 277   2              LcdDispChar (5, 1, 'm');
 278   2              LcdDispChar (6, 1, 'm');
 279   2          }
 280   1          j = 0;
 281   1          if (us0_gap == 0 && us0_frash == 0)
 282   1          {
 283   2              j = j + 1;
 284   2          }
 285   1          if (us1_gap == 0 && us1_frash == 0)
 286   1          {
 287   2              j = j + 1;
 288   2          }
 289   1          if (j != 0)
 290   1          {
 291   2              fsm = FSM_ERRO;
 292   2          }
 293   1          else 
 294   1          {
 295   2              fsm = FSM_US01;
 296   2          }
 297   1      }
 298          
 299          //---------------------------------------------------------------------------
 300          // FSM: FSM_ERRO handler
 301          //---------------------------------------------------------------------------
C51 COMPILER V9.52.0.0   PROJ_LIB                                                          01/11/2018 18:54:03 PAGE 6   

 302          void fsm_erro_proc(void)
 303          {
 304   1          LcdDispInt  (10, 0, us0_err);
 305   1          LcdDispInt  (10, 1, us1_err);
 306   1          fsm = FSM_US01;
 307   1      }
 308          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    696    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     36       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
